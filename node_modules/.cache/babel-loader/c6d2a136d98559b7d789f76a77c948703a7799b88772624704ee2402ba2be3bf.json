{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRANJAL\\\\OneDrive\\\\Desktop\\\\Exploding-Kitten-Game\\\\exploding-kittens-frontend\\\\src\\\\components\\\\CardBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport cat1 from '../assets/cat1.png';\nimport cat2 from '../assets/cat2.png';\nimport cat3 from '../assets/cat3.png';\nimport cat4 from '../assets/cat4.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardBlock({\n  cardType,\n  index,\n  onCardFlip,\n  flippedArray\n}) {\n  _s();\n  const [flipped, setFlipped] = useState(flippedArray[index]);\n  useEffect(() => {\n    setFlipped(flippedArray[index]);\n  }, [flippedArray, index]);\n  const handleClick = () => {\n    if (!flipped) {\n      setFlipped(true);\n      onCardFlip(index, cardType);\n    }\n  };\n  const getBackImage = () => {\n    switch (cardType) {\n      case 'cat':\n        return cat1;\n      case 'defuse':\n        return cat2;\n      case 'shuffle':\n        return cat3;\n      case 'exploding':\n        return cat4;\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card-block ${flipped ? 'flipped' : ''}`,\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-front\",\n      children: \"?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-back\",\n      style: {\n        backgroundImage: `url(${getBackImage()})`,\n        backgroundSize: '80%',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(CardBlock, \"RTMdR0zcueYcNj6rm7dfCAEk7tI=\");\n_c = CardBlock;\nexport default CardBlock;\nvar _c;\n$RefreshReg$(_c, \"CardBlock\");","map":{"version":3,"names":["React","useState","useEffect","cat1","cat2","cat3","cat4","jsxDEV","_jsxDEV","CardBlock","cardType","index","onCardFlip","flippedArray","_s","flipped","setFlipped","handleClick","getBackImage","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","_c","$RefreshReg$"],"sources":["C:/Users/PRANJAL/OneDrive/Desktop/Exploding-Kitten-Game/exploding-kittens-frontend/src/components/CardBlock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport cat1 from '../assets/cat1.png';\r\nimport cat2 from '../assets/cat2.png';\r\nimport cat3 from '../assets/cat3.png';\r\nimport cat4 from '../assets/cat4.png';\r\n\r\nfunction CardBlock({ cardType, index, onCardFlip, flippedArray }) {\r\n  const [flipped, setFlipped] = useState(flippedArray[index]);\r\n\r\n  useEffect(() => {\r\n    setFlipped(flippedArray[index]);\r\n  }, [flippedArray, index]);\r\n\r\n  const handleClick = () => {\r\n    if (!flipped) {\r\n      setFlipped(true);\r\n      onCardFlip(index, cardType);\r\n    }\r\n  };\r\n\r\n  const getBackImage = () => {\r\n    switch (cardType) {\r\n      case 'cat':\r\n        return cat1;\r\n      case 'defuse':\r\n        return cat2;\r\n      case 'shuffle':\r\n        return cat3;\r\n      case 'exploding':\r\n        return cat4;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`card-block ${flipped ? 'flipped' : ''}`} onClick={handleClick}>\r\n      <div className=\"card-front\">?</div>\r\n      <div\r\n        className=\"card-back\"\r\n        style={{\r\n          backgroundImage: `url(${getBackImage()})`,\r\n          backgroundSize: '80%',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundPosition: 'center',\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardBlock;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,SAASA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAChE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAACY,YAAY,CAACF,KAAK,CAAC,CAAC;EAE3DT,SAAS,CAAC,MAAM;IACdc,UAAU,CAACH,YAAY,CAACF,KAAK,CAAC,CAAC;EACjC,CAAC,EAAE,CAACE,YAAY,EAAEF,KAAK,CAAC,CAAC;EAEzB,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACF,OAAO,EAAE;MACZC,UAAU,CAAC,IAAI,CAAC;MAChBJ,UAAU,CAACD,KAAK,EAAED,QAAQ,CAAC;IAC7B;EACF,CAAC;EAED,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzB,QAAQR,QAAQ;MACd,KAAK,KAAK;QACR,OAAOP,IAAI;MACb,KAAK,QAAQ;QACX,OAAOC,IAAI;MACb,KAAK,SAAS;QACZ,OAAOC,IAAI;MACb,KAAK,WAAW;QACd,OAAOC,IAAI;MACb;QACE,OAAO,EAAE;IACb;EACF,CAAC;EAED,oBACEE,OAAA;IAAKW,SAAS,EAAG,cAAaJ,OAAO,GAAG,SAAS,GAAG,EAAG,EAAE;IAACK,OAAO,EAAEH,WAAY;IAAAI,QAAA,gBAC7Eb,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAE,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnCjB,OAAA;MACEW,SAAS,EAAC,WAAW;MACrBO,KAAK,EAAE;QACLC,eAAe,EAAG,OAAMT,YAAY,CAAC,CAAE,GAAE;QACzCU,cAAc,EAAE,KAAK;QACrBC,gBAAgB,EAAE,WAAW;QAC7BC,kBAAkB,EAAE;MACtB;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACX,EAAA,CA3CQL,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AA6ClB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}